--- libGeoIP/GeoIP.h.orig	2021-03-17 16:52:18.072129842 -0400
+++ libGeoIP/GeoIP.h	2021-03-17 16:52:26.869922903 -0400
@@ -186,11 +186,11 @@
 
 /* Warning: do not use those arrays as doing so may break your
  * program with newer GeoIP versions */
-extern GEOIP_DATA const char GeoIP_country_code[256][3];
-extern GEOIP_DATA const char GeoIP_country_code3[256][4];
-extern GEOIP_DATA const char *GeoIP_country_name[256];
-extern GEOIP_DATA const char *GeoIP_utf8_country_name[256];
-extern GEOIP_DATA const char GeoIP_country_continent[256][3];
+extern GEOIP_DATA const char GeoIP_country_code[257][3];
+extern GEOIP_DATA const char GeoIP_country_code3[257][4];
+extern GEOIP_DATA const char *GeoIP_country_name[257];
+extern GEOIP_DATA const char *GeoIP_utf8_country_name[257];
+extern GEOIP_DATA const char GeoIP_country_continent[257][3];
 
 GEOIP_API void GeoIP_setup_custom_directory(char *dir);
 GEOIP_API GeoIP *GeoIP_open_type(int type, int flags);
--- libGeoIP/GeoIP.c.orig	2021-03-17 16:52:22.646022256 -0400
+++ libGeoIP/GeoIP.c	2021-03-17 16:52:26.873922809 -0400
@@ -97,7 +97,7 @@
     (lseek(fd, offset, SEEK_SET) == offset ? read(fd, buf, count) : -1)
 #endif /* HAVE_PREAD */
 
-const char GeoIP_country_code[256][3] = {
+const char GeoIP_country_code[257][3] = {
     "--", "AP", "EU", "AD", "AE", "AF", "AG", "AI", "AL", "AM", "CW", "AO",
     "AQ", "AR", "AS", "AT", "AU", "AW", "AZ", "BA", "BB", "BD", "BE", "BF",
     "BG", "BH", "BI", "BJ", "BM", "BN", "BO", "BR", "BS", "BT", "BV", "BW",
@@ -119,12 +119,12 @@
     "TL", "TR", "TT", "TV", "TW", "TZ", "UA", "UG", "UM", "US", "UY", "UZ",
     "VA", "VC", "VE", "VG", "VI", "VN", "VU", "WF", "WS", "YE", "YT", "RS",
     "ZA", "ZM", "ME", "ZW", "A1", "A2", "O1", "AX", "GG", "IM", "JE", "BL",
-    "MF", "BQ", "SS", "O1"};
+    "MF", "BQ", "SS", "XK", "O1"};
 
 static const unsigned num_GeoIP_countries =
     (unsigned)(sizeof(GeoIP_country_code) / sizeof(GeoIP_country_code[0]));
 
-const char GeoIP_country_code3[256][4] = {
+const char GeoIP_country_code3[257][4] = {
     "--",  "AP",  "EU",  "AND", "ARE", "AFG", "ATG", "AIA", "ALB", "ARM", "CUW",
     "AGO", "ATA", "ARG", "ASM", "AUT", "AUS", "ABW", "AZE", "BIH", "BRB", "BGD",
     "BEL", "BFA", "BGR", "BHR", "BDI", "BEN", "BMU", "BRN", "BOL", "BRA", "BHS",
@@ -148,9 +148,9 @@
     "TWN", "TZA", "UKR", "UGA", "UMI", "USA", "URY", "UZB", "VAT", "VCT", "VEN",
     "VGB", "VIR", "VNM", "VUT", "WLF", "WSM", "YEM", "MYT", "SRB", "ZAF", "ZMB",
     "MNE", "ZWE", "A1",  "A2",  "O1",  "ALA", "GGY", "IMN", "JEY", "BLM", "MAF",
-    "BES", "SSD", "O1"};
+    "BES", "SSD", "XKX", "O1"};
 
-const char *GeoIP_utf8_country_name[256] = {
+const char *GeoIP_utf8_country_name[257] = {
     "N/A",
     "Asia/Pacific Region",
     "Europe",
@@ -408,9 +408,10 @@
     "Saint Martin",
     "Bonaire, Saint Eustatius and Saba",
     "South Sudan",
+    "Kosovo",
     "Other"};
 
-const char *GeoIP_country_name[256] = {
+const char *GeoIP_country_name[257] = {
     "N/A",
     "Asia/Pacific Region",
     "Europe",
@@ -666,13 +667,14 @@
     "Saint Martin",
     "Bonaire, Saint Eustatius and Saba",
     "South Sudan",
+    "Kosovo",
     "Other"};
 
 /* Possible continent codes are AF, AS, EU, NA, OC, SA for Africa, Asia, Europe,
    North America, Oceania
    and South America. */
 
-const char GeoIP_country_continent[256][3] = {
+const char GeoIP_country_continent[257][3] = {
     "--", "AS", "EU", "EU", "AS", "AS", "NA", "NA", "EU", "AS", "NA", "AF",
     "AN", "SA", "OC", "EU", "OC", "NA", "AS", "EU", "NA", "AS", "EU", "AF",
     "EU", "AS", "AF", "AF", "NA", "AS", "SA", "SA", "NA", "AS", "AN", "AF",
@@ -694,7 +696,7 @@
     "AS", "EU", "NA", "OC", "AS", "AF", "EU", "AF", "OC", "NA", "SA", "AS",
     "EU", "NA", "SA", "NA", "NA", "AS", "OC", "OC", "OC", "AS", "AF", "EU",
     "AF", "AF", "EU", "AF", "--", "--", "--", "EU", "EU", "EU", "EU", "NA",
-    "NA", "NA", "AF", "--"};
+    "NA", "NA", "AF", "EU", "--"};
 
 static const char *get_db_description(int dbtype) {
     const char *ptr;
